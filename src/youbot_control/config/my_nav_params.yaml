amcl:
  ros__parameters:
    use_sim_time: True
    alpha1: 0.2
    alpha2: 0.2
    alpha3: 0.2
    alpha4: 0.2
    alpha5: 0.2
    base_frame_id: "base_link"
    beam_skip_distance: 0.5
    beam_skip_error_threshold: 0.9
    beam_skip_threshold: 0.3
    do_beamskip: false
    global_frame_id: "map"
    lambda_short: 0.1
    laser_likelihood_max_dist: 2.0
    laser_max_range: 100.0
    laser_min_range: -1.0
    laser_model_type: "likelihood_field"
    max_beams: 60
    max_particles: 2000
    min_particles: 500
    odom_frame_id: "odom"
    pf_err: 0.05
    pf_z: 0.99
    recovery_alpha_fast: 0.0
    recovery_alpha_slow: 0.0
    resample_interval: 1
    robot_model_type: "nav2_amcl::OmniMotionModel"
    save_pose_rate: 0.5
    sigma_hit: 0.2
    tf_broadcast: true
    transform_tolerance: 1.0
    update_min_a: 0.2
    update_min_d: 0.25
    z_hit: 0.5
    z_max: 0.05
    z_rand: 0.5
    z_short: 0.05
    scan_topic: scan
  
controller_server:
  ros_parameters:
    controller_frequency: 20.0 #5.0
    costmap_update_timeout: 0.3
    publish_zero_velocity: true
    controller_plugins: ["FollowPath"] #["FollowPath"] - default
    progress_checker_plugins: "progress_checker"
    goal_checker_plugins: ["goal_checker"]
    min_x_velocity_threshold: 0.05
    min_y_velocity_threshold: 0.05
    min_theta_velocity_threshold: 0.05
    failure_tolerance: 0.0
    odom_topic: "odom"
    odom_duration: 0.1
    enable_stamped_cmd_vel: false
    search_window: 2.0

    progress_checker:
      plugin: "nav2_controller::PoseProgressChecker"
      required_movement_radius: 0.5
      required_movement_angle: 0.5
      movement_time_allowance: 10.0
    
    goal_checker:
      plugin: "nav2_controller::StoppedGoalChecker"
      trans_stopped_velocity: 0.25      # Velocity below is considered to be stopped at tolerance met (m/s).
      rot_stopped_velocity: 0.25        # Velocity below is considered to be stopped at tolerance met (rad/s).
      xy_goal_tolerance: 0.25           # Tolerance to meet goal completion criteria (m).
      yaw_goal_tolerance: 0.25          # Tolerance to meet goal completion criteria (rad).
      stateful: true                    # Whether to check for XY position tolerance after rotating to goal orientation in case of minor localization changes.

    FollowPath:
      plugin: "nav2_mppi_controller::MPPIController" #Model Predictive Path Integral Controller
      motion_model: "Omni" # DiffDrive, Omni, Ackermann
      critics: ["ConstraintCritic", "CostCritic","GoalCritic", 
                "GoalAngleCritic","PathAlignCritic", "PathAngleCritic", 
                "PathFollowCritic","PreferForwardCritic", "TwirlingCritic"]
      iteration_count: 1 # Iteration count in the MPPI algorithm. Recommended to remain as 1 and instead prefer larger batch sizes.
      batch_size: 1000 # Count of randomly sampled candidate trajectories from current optimal control sequence in a given iteration. 1000 @ 50 Hz or 2000 @ 30 Hz seems to produce good results.
      time_steps: 56  # Number of time steps (points) in candidate trajectories.
      model_dt: 0.2 # Length of each time step’s dt timestep, in seconds. time_steps * model_dt is the prediction horizon.
      vx_std: 0.2 # Sampling standard deviation in linear x velocity.
      vy_std: 0.2 # Sampling standard deviation in linear y velocity.
      wz_std: 0.2 # Sampling standard deviation in angular z velocity.
      vx_max: 0.3 # Target maximum forward velocity (m/s).
      vx_min: -0.3 # Target maximum reverse velocity (m/s).
      vy_max: 0.3 # Target maximum lateral velocity (m/s).
      wz_max: 0.5 # Target maximum angular velocity (rad/s).
      ax_max: 0.8 # Maximum forward acceleration (m/s^2).
      ax_min: -0.8 #Maximum deceleration along the X-axis (m/s^2).
      ay_max: 0.8 # Maximum lateral acceleration (m/s^2).
      ay_min: -0.8 # Maximum deceleration along the Y-axis (m/s^2).
      az_max: 10.0 # Maximum angular acceleration (rad/s^2).
      temperature: 0.3 #Selectiveness of trajectories by their costs (The closer this value to 0, the “more” we take in consideration controls with less cost), 
                        # 0 mean use control with best cost, huge value will lead to just taking mean of all trajectories without cost consideration.
      gamma: 0.015 # A trade-off between smoothness (high) and low energy (low).
      visualize: false # Whether to publish debugging trajectories for visualization
      publish_optimal_trajectory: false # Whether to publish the optimal trajectory, computed by MPC
      retry_attempt_limit: 1 # Number of times to retry if controller fails to produce a valid command.
      reset_period: 1.0 #Required time of inactivity to reset optimizer (only in Humble due to backport ABI policies).
      regenerate_noises: false
      publish_critics_stats: false
      